name: Rust

on:
  push:
    paths:
      - server
      - .github/workflows/rust.yml
  pull_request:
    paths:
      - server

defaults:
  run:
    working-directory: server

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: holostats
          POSTGRES_PASSWORD: holostats
          POSTGRES_DB: holostats
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Initialize database
        run: psql postgres://holostats:holostats@localhost/holostats -f sql/schema.sql

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache target/
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Format
        run: cargo fmt -- --check

      - name: Run Test
        run: cargo test
        env:
          YOUTUBE_API_KEY0: YOUTUBE_API_KEY0
          YOUTUBE_API_KEY1: YOUTUBE_API_KEY1
          DATABASE_URL: postgres://holostats:holostats@localhost/holostats
          PUBSUBHUBBUB_URL: PUBSUBHUBBUB_URL

      - name: Build
        if: github.ref == 'refs/heads/master'
        run: |
          cargo build --release
          strip target/release/{api,subscribe,stream_stat,channel_stat}
        env:
          DATABASE_URL: postgres://holostats:holostats@localhost/holostats
          YOUTUBE_API_KEY0: ${{ secrets.YOUTUBE_API_KEY0 }}
          YOUTUBE_API_KEY1: ${{ secrets.YOUTUBE_API_KEY1 }}
          PUBSUBHUBBUB_URL: ${{ secrets.PUBSUBHUBBUB_URL }}
          COOKIE: ${{ secrets.COOKIE }}

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        run: rsync -avzzP target/release/{api,subscribe,stream_stat,channel_stat} rsync://ci@${{ secrets.RSYNC_HOST }}/bin
        env:
          RSYNC_PASSWORD: ${{ secrets.RSYNC_PASSWORD }}
